(begin
  (quote)
  (quasiquote)
  (unquote)
  (unquote-splicing)
  (quote 23)
  (quasiquote 23)
  (unquote 23)
  (unquote-splicing 23)
  (quote 23 5)
  (quasiquote foo bar baz)
  (unquote 23 4)
  (unquote-splicing test test test)
  (if)
  (if cond)
  (if cond then)
  (if cond then else)
  (if cond then else whats going on ???)
  (do)
  (do some things)
  (let)
  (let x)
  (let ())
  (let () 23)
  (let x 23)
  (let (x) 23)
  (let ((23 x)) 23)
  (let (()) 23)
  (let ((x 23)) x)
  (let ((x 23) y) x)
  (let ((x 23) y z) x)
  (letrec)
  (letrec x)
  (letrec ())
  (letrec () 23)
  (letrec x 23)
  (letrec (x) 23)
  (letrec ((23 x)) 23)
  (letrec (()) 23)
  (letrec ((x 23)) x)
  (letrec ((x 23) y) x)
  (letrec ((x 23) y z) x)
  (lambda)
  (lambda x)
  (lambda ())
  (lambda x 23)
  (lambda () 23)
  (lambda (x) 23)
  (lambda ((x y)) 23)
  (lambda ((x y)) 23)
  (lambda (23) 23)
  (lambda ("some arg I dunno might delete") 23)
  (define)
  (define foo)
  (define 23 foo)
  (define foo 23)
  (define () 23)
  (define (foo) 23)
  (define (foo x) 23)
  (define (foo))
  (define (foo 23) x))
