(letrec ((notify (lambda (prefix t count)
                   (unless (= count 0)
                     (assert! `(notify ,prefix ,(random)))
                     (sleep t)
                     (notify prefix t (- count 1)))))
         (listen (lambda (count)
                   (unless (= count 0)
                     (let ((m (recv)))
                       (display "Complex event: ")
                       (display m)
                       (newline)
                       (listen (- count 1)))))))
  (spawn (lambda ()
           (monitor 1000)))
  (spawn (lambda ()
           (notify 'foo 1000 100)))
  (spawn (lambda ()
           (notify 'bar 5000 100)))
  (notify-whenever (self)
                   '(filter (and (?notify foo ?foo)
                                 (?notify bar ?bar))
                            (>= ?foo 0.5)
                            (< ?foo 0.75)
                            (<= ?bar 0.1)))
  (listen 3))
